{"version":3,"sources":["JS_Components/Constants/action-types.js","logo.svg","App.js","JS_Components/Actions/action.js","reportWebVitals.js","JS_Components/Reducers/rootReducer.js","index.js"],"names":["ADD_TASK","REMOVE_TASK","EDIT_TASK","CLEAR_TASKS","App","state","text","date","Date","edit","id","editText","editDate","clear","renderTheTasks","x","tasks","props","className","map","each","type","onClick","remove_task","setState","placeholder","onChange","e","target","value","edit_task","this","add_task","clear_task","React","Component","connect","data","payload","y","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Reducer","action","Math","random","console","log","filter","ele","reqValue","find","index","indexOf","splice","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0c9c41f.chunk.js","sourcesContent":["export const ADD_TASK = \"ADD_TASK\";\r\nexport const REMOVE_TASK = \"REMOVE_TASK\";\r\nexport const EDIT_TASK = \"EDIT_TASK\";\r\nexport const CLEAR_TASKS = \"CLEAR_TASKS\";\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { add_task } from \"./JS_Components/Actions/action\";\nimport { connect } from \"react-redux\";\nimport { remove_task } from \"./JS_Components/Actions/action\";\nimport { edit_task, clear_task } from \"./JS_Components/Actions/action\";\n\nclass App extends React.Component {\n  state = {\n    text: \"\",\n    date: new Date(),\n    edit: false,\n    id: \"\",\n    editText: \"\",\n    editDate: \"\",\n    clear: false,\n  };\n\n  renderTheTasks = (x) => {\n    const { tasks } = this.props;\n    if (this.state.edit === false) {\n      return (\n        <ul className=\"list-group\">\n          {tasks.map((each) => {\n            return (\n              <li key={each.id} className=\"list-group-item\">\n                <div>{each.text}</div>\n                <div>{each.date}</div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className=\" btn btn-danger\"\n                    onClick={() => {\n                      this.props.remove_task(each.id);\n                    }}\n                  >\n                    x\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\" btn btn-primary\"\n                    onClick={() => {\n                      this.setState({ edit: true, id: each.id });\n                    }}\n                  >\n                    edit\n                  </button>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      );\n    } else {\n      return (\n        <div>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"enter task required\"\n            onChange={(e) => {\n              return this.setState({ editText: e.target.value });\n            }}\n          />\n          <input\n            className=\"form-control\"\n            type=\"datetime-local\"\n            onChange={(e) => {\n              return this.setState({ editDate: e.target.value });\n            }}\n          />\n\n          <div className=\"d-grid\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                this.props.edit_task(this.state, x);\n                this.setState({ edit: false });\n              }}\n            >\n              OK\n            </button>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"reminder-title\">\n          <h2>Daily Tasks</h2>\n        </div>\n\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"enter task required\"\n          value={this.state.text}\n          onChange={(e) => {\n            return this.setState({ text: e.target.value });\n          }}\n        />\n        <input\n          className=\"form-control\"\n          type=\"datetime-local\"\n          value={this.state.date}\n          onChange={(e) => {\n            return this.setState({ date: e.target.value });\n          }}\n        />\n        <div className=\"d-grid\">\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => {\n              if (this.state.text !== \"\") {\n                if (this.state.date !== \"\") {\n                  this.props.add_task(this.state);\n                }\n              }\n              this.setState({ text: \"\", date: \"\", clear: false });\n            }}\n          >\n            Add Task\n          </button>\n        </div>\n        <div>{this.renderTheTasks(this.state.id)}</div>\n\n        <div className=\"d-grid\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              this.props.clear_task();\n              this.setState({ clear: true });\n            }}\n          >\n            Clear Tasks\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state,\n  };\n}\n\n/* function mapDispatchToProps(dispatch) {\n  return {\n    add_reminder: () => dispatch(add_reminder()),\n  };\n} */\nexport default connect(mapStateToProps, {\n  add_task,\n  remove_task,\n  edit_task,\n  clear_task,\n})(App);\n","import { ADD_TASK } from \"../Constants/action-types\";\r\nimport { REMOVE_TASK } from \"../Constants/action-types\";\r\nimport { EDIT_TASK, CLEAR_TASKS } from \"../Constants/action-types\";\r\n\r\nexport const add_task = (data) => {\r\n  return {\r\n    type: ADD_TASK,\r\n    payload: {\r\n      text: data.text,\r\n      date: data.date,\r\n    },\r\n  };\r\n};\r\n\r\nexport const remove_task = (data) => {\r\n  return {\r\n    type: REMOVE_TASK,\r\n    payload: {\r\n      id: data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const edit_task = (data, y) => {\r\n  return {\r\n    type: EDIT_TASK,\r\n    payload: {\r\n      text: data.editText,\r\n      date: data.editDate,\r\n      id: y,\r\n    },\r\n  };\r\n};\r\n\r\nexport const clear_task = () => {\r\n  return {\r\n    type: CLEAR_TASKS,\r\n  };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  ADD_TASK,\r\n  REMOVE_TASK,\r\n  EDIT_TASK,\r\n  CLEAR_TASKS,\r\n} from \"../Constants/action-types\";\r\n\r\nconst initialState = [];\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n  let tasks = [];\r\n  if (action.type === ADD_TASK) {\r\n    tasks = [\r\n      ...state,\r\n      {\r\n        text: action.payload.text,\r\n        date: action.payload.date,\r\n        id: Math.random(),\r\n      },\r\n    ];\r\n    console.log(\"from rootReducer \", tasks);\r\n    return tasks;\r\n  } else if (action.type === REMOVE_TASK) {\r\n    tasks = state.filter((ele) => {\r\n      return ele.id !== action.payload.id;\r\n    });\r\n    console.log(\"from rootReducer delete \", tasks);\r\n    return tasks;\r\n  } else if (action.type === EDIT_TASK) {\r\n    tasks = [...state];\r\n    const reqValue = tasks.find((ele, index) => {\r\n      if (ele.id === action.payload.id) {\r\n        return ele;\r\n      }\r\n    });\r\n    const index = tasks.indexOf(reqValue);\r\n    tasks.splice(index, 1, action.payload);\r\n    return tasks;\r\n  }\r\n  if (action.type === CLEAR_TASKS) {\r\n    tasks = [];\r\n    return tasks;\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default Reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport Reducer from \"./JS_Components/Reducers/rootReducer\";\n\nconst store = createStore(\n  Reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}